import { 
  users, categories, books, audioBooks, userLibrary, purchases, shopProducts,
  type User, type InsertUser,
  type Category, type InsertCategory,
  type Book, type InsertBook,
  type AudioBook, type InsertAudioBook,
  type UserLibrary, type InsertUserLibrary,
  type Purchase, type InsertPurchase,
  type ShopProduct, type InsertShopProduct
} from "@shared/schema";

export interface IStorage {
  // Users
  getUser(id: number): Promise<User | undefined>;
  getUserByUsername(username: string): Promise<User | undefined>;
  createUser(user: InsertUser): Promise<User>;

  // Categories
  getCategories(): Promise<Category[]>;
  getCategory(id: number): Promise<Category | undefined>;
  createCategory(category: InsertCategory): Promise<Category>;

  // Books
  getBooks(categoryId?: number, isPremium?: boolean): Promise<Book[]>;
  getBook(id: number): Promise<Book | undefined>;
  createBook(book: InsertBook): Promise<Book>;
  updateBook(id: number, book: Partial<InsertBook>): Promise<Book | undefined>;
  deleteBook(id: number): Promise<boolean>;
  getDeletedBooks(): Promise<Book[]>;
  restoreBook(id: number): Promise<boolean>;
  searchBooks(query: string): Promise<Book[]>;

  // Audio Books
  getAudioBooks(categoryId?: number, isPremium?: boolean): Promise<AudioBook[]>;
  getAudioBook(id: number): Promise<AudioBook | undefined>;
  createAudioBook(audioBook: InsertAudioBook): Promise<AudioBook>;
  updateAudioBook(id: number, audioBook: Partial<InsertAudioBook>): Promise<AudioBook | undefined>;
  deleteAudioBook(id: number): Promise<boolean>;
  searchAudioBooks(query: string): Promise<AudioBook[]>;

  // User Library
  getUserLibrary(userId: number): Promise<UserLibrary[]>;
  addToLibrary(library: InsertUserLibrary): Promise<UserLibrary>;
  updateProgress(userId: number, bookId?: number, audioBookId?: number, progress: number): Promise<void>;

  // Shop Products
  getShopProducts(): Promise<ShopProduct[]>;
  getShopProduct(id: number): Promise<ShopProduct | undefined>;
  createShopProduct(product: InsertShopProduct): Promise<ShopProduct>;
  updateShopProduct(id: number, product: Partial<InsertShopProduct>): Promise<ShopProduct | undefined>;
  deleteShopProduct(id: number): Promise<boolean>;

  // Purchases
  getUserPurchases(userId: number): Promise<Purchase[]>;
  createPurchase(purchase: InsertPurchase): Promise<Purchase>;
  hasPurchased(userId: number, bookId?: number, audioBookId?: number): Promise<boolean>;
}

export class MemStorage implements IStorage {
  private users: Map<number, User>;
  private categories: Map<number, Category>;
  private books: Map<number, Book>;
  private audioBooks: Map<number, AudioBook>;
  private userLibrary: Map<number, UserLibrary>;
  private purchases: Map<number, Purchase>;
  private shopProducts: Map<number, ShopProduct>;
  private currentUserId: number;
  private currentCategoryId: number;
  private currentBookId: number;
  private currentAudioBookId: number;
  private currentLibraryId: number;
  private currentPurchaseId: number;
  private currentShopProductId: number;

  constructor() {
    this.users = new Map();
    this.categories = new Map();
    this.books = new Map();
    this.audioBooks = new Map();
    this.userLibrary = new Map();
    this.purchases = new Map();
    this.shopProducts = new Map();
    this.currentUserId = 1;
    this.currentCategoryId = 1;
    this.currentBookId = 1;
    this.currentAudioBookId = 1;
    this.currentLibraryId = 1;
    this.currentPurchaseId = 1;
    this.currentShopProductId = 1;

    this.initializeData();
  }

  private initializeData() {
    // Initialize categories
    const defaultCategories: InsertCategory[] = [
      { name: "–°–∫–∞–∑–∫–∏", description: "–í–æ–ª—à–µ–±–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–µ—Ç–µ–π", icon: "üè∞" },
      { name: "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", description: "–ó–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", icon: "üó∫Ô∏è" },
      { name: "–û–±—É—á–∞—é—â–∏–µ", description: "–ü–æ–ª–µ–∑–Ω—ã–µ –∏ –ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–∏–≥–∏", icon: "üìö" },
      { name: "–°—Ç–∏—Ö–∏", description: "–î–µ—Ç—Å–∫–∏–µ —Å—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏—è", icon: "üé≠" }
    ];

    defaultCategories.forEach(cat => this.createCategory(cat));

    // Initialize books
    const defaultBooks: InsertBook[] = [
      {
        title: "–ö–æ–ª–æ–±–æ–∫",
        author: "–†—É—Å—Å–∫–∞—è –Ω–∞—Ä–æ–¥–Ω–∞—è —Å–∫–∞–∑–∫–∞",
        description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —Ä—É—Å—Å–∫–∞—è —Å–∫–∞–∑–∫–∞ –æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö –∫–æ–ª–æ–±–∫–∞",
        coverImage: "/kolobok-cover.webp",
        price: 0, // –ë–µ—Å–ø–ª–∞—Ç–Ω–æ
        content: `–ñ–∏–ª–∏-–±—ã–ª–∏ –¥–µ–¥ –¥–∞ –±–∞–±–∞. –í–æ—Ç –ø—Ä–æ—Å–∏—Ç –¥–µ–¥ –±–∞–±—É –∏—Å–ø–µ—á—å –∫–æ–ª–æ–±–æ–∫. –ë–∞–±–∞ –ø–æ –∫–æ—Ä–æ–±—É –ø–æ—Å–∫—Ä–µ–±–ª–∞, –ø–æ —Å—É—Å–µ–∫—É –ø–æ–º–µ–ª–∞, –Ω–∞–±—Ä–∞–ª–∞ –º—É–∫–∏ –≥–æ—Ä—Å—Ç–∏ –¥–≤–µ. –ó–∞–º–µ—Å–∏–ª–∞ —Ç–µ—Å—Ç–æ –Ω–∞ —Å–º–µ—Ç–∞–Ω–µ, —Å–∫–∞—Ç–∞–ª–∞ –∫–æ–ª–æ–±–æ–∫, –∏–∑–∂–∞—Ä–∏–ª–∞ –≤ –º–∞—Å–ª–µ –∏ –ø–æ–ª–æ–∂–∏–ª–∞ –Ω–∞ –æ–∫–æ—à–∫–æ –æ—Å—Ç—ã–≤–∞—Ç—å.

–ö–æ–ª–æ–±–æ–∫ –ø–æ–ª–µ–∂–∞–ª-–ø–æ–ª–µ–∂–∞–ª, –¥–∞ –≤–¥—Ä—É–≥ –∏ –ø–æ–∫–∞—Ç–∏–ª—Å—è ‚Äî —Å –æ–∫–Ω–∞ –Ω–∞ –ª–∞–≤–∫—É, —Å –ª–∞–≤–∫–∏ –Ω–∞ –ø–æ–ª, –ø–æ –ø–æ–ª—É –∫ –¥–≤–µ—Ä–∏, –ø—Ä—ã–≥ —á–µ—Ä–µ–∑ –ø–æ—Ä–æ–≥ –≤ —Å–µ–Ω–∏, –∏–∑ —Å–µ–Ω–µ–π –Ω–∞ –∫—Ä—ã–ª—å—Ü–æ, —Å –∫—Ä—ã–ª—å—Ü–∞ –Ω–∞ –¥–≤–æ—Ä, —Å–æ –¥–≤–æ—Ä–∞ –∑–∞ –≤–æ—Ä–æ—Ç–∞, –¥–∞–ª—å—à–µ –∏ –¥–∞–ª—å—à–µ.

<div style="text-align: center; margin: 20px 0;">
<img src="/book-cover-1.webp" alt="–ö–æ–ª–æ–±–æ–∫ –∫–∞—Ç–∏—Ç—Å—è –ø–æ –¥–æ—Ä–æ–≥–µ" style="width: 100%; max-width: 350px; height: auto; border-radius: 12px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);" />
</div>

–ö–∞—Ç–∏—Ç—Å—è –∫–æ–ª–æ–±–æ–∫ –ø–æ –¥–æ—Ä–æ–≥–µ, –∞ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –µ–º—É –∑–∞—è—Ü: "–ö–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –Ø —Ç–µ–±—è —Å—ä–µ–º!" ‚Äî "–ù–µ –µ—à—å –º–µ–Ω—è, –∑–∞—è—Ü! –Ø —Ç–µ–±–µ –ø–µ—Å–µ–Ω–∫—É —Å–ø–æ—é". –ò –∑–∞–ø–µ–ª: "–Ø –∫–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –ü–æ –∫–æ—Ä–æ–±—É —Å–∫—Ä–µ–±—ë–Ω, –ø–æ —Å—É—Å–µ–∫—É –º–µ—Ç—ë–Ω, –Ω–∞ —Å–º–µ—Ç–∞–Ω–µ –º–µ—à–∞–Ω, –≤ –ø–µ—á–∫—É —Å–∞–∂—ë–Ω, –Ω–∞ –æ–∫–æ—à–∫–µ —Å—Ç—É–∂—ë–Ω. –Ø –æ—Ç –¥–µ–¥—É—à–∫–∏ —É—à—ë–ª, —è –æ—Ç –±–∞–±—É—à–∫–∏ —É—à—ë–ª, –æ—Ç —Ç–µ–±—è, –∑–∞–π—Ü–∞, –Ω–µ —Ö–∏—Ç—Ä–æ —É–π—Ç–∏!"

–ò –ø–æ–∫–∞—Ç–∏–ª—Å—è –∫–æ–ª–æ–±–æ–∫ –¥–∞–ª—å—à–µ ‚Äî —Ç–æ–ª—å–∫–æ –∑–∞—è—Ü –µ–≥–æ –∏ –≤–∏–¥–µ–ª! –ö–∞—Ç–∏—Ç—Å—è –∫–æ–ª–æ–±–æ–∫ –ø–æ –¥–æ—Ä–æ–≥–µ, –∞ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –µ–º—É –≤–æ–ª–∫: "–ö–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –Ø —Ç–µ–±—è —Å—ä–µ–º!" ‚Äî "–ù–µ –µ—à—å –º–µ–Ω—è, –≤–æ–ª–∫! –Ø —Ç–µ–±–µ –ø–µ—Å–µ–Ω–∫—É —Å–ø–æ—é". –ò –∑–∞–ø–µ–ª: "–Ø –∫–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –ü–æ –∫–æ—Ä–æ–±—É —Å–∫—Ä–µ–±—ë–Ω, –ø–æ —Å—É—Å–µ–∫—É –º–µ—Ç—ë–Ω, –Ω–∞ —Å–º–µ—Ç–∞–Ω–µ –º–µ—à–∞–Ω, –≤ –ø–µ—á–∫—É —Å–∞–∂—ë–Ω, –Ω–∞ –æ–∫–æ—à–∫–µ —Å—Ç—É–∂—ë–Ω. –Ø –æ—Ç –¥–µ–¥—É—à–∫–∏ —É—à—ë–ª, —è –æ—Ç –±–∞–±—É—à–∫–∏ —É—à—ë–ª, —è –æ—Ç –∑–∞–π—Ü–∞ —É—à—ë–ª, –æ—Ç —Ç–µ–±—è, –≤–æ–ª–∫–∞, –Ω–µ —Ö–∏—Ç—Ä–æ —É–π—Ç–∏!"

–ò –ø–æ–∫–∞—Ç–∏–ª—Å—è –∫–æ–ª–æ–±–æ–∫ –¥–∞–ª—å—à–µ ‚Äî —Ç–æ–ª—å–∫–æ –≤–æ–ª–∫ –µ–≥–æ –∏ –≤–∏–¥–µ–ª! –ö–∞—Ç–∏—Ç—Å—è –∫–æ–ª–æ–±–æ–∫ –ø–æ –¥–æ—Ä–æ–≥–µ, –∞ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –µ–º—É –º–µ–¥–≤–µ–¥—å: "–ö–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –Ø —Ç–µ–±—è —Å—ä–µ–º!" ‚Äî "–ù–µ –µ—à—å –º–µ–Ω—è, –º–µ–¥–≤–µ–¥—å! –Ø —Ç–µ–±–µ –ø–µ—Å–µ–Ω–∫—É —Å–ø–æ—é". –ò –∑–∞–ø–µ–ª –∫–æ–ª–æ–±–æ–∫: "–Ø –∫–æ–ª–æ–±–æ–∫, –∫–æ–ª–æ–±–æ–∫! –ü–æ –∫–æ—Ä–æ–±—É —Å–∫—Ä–µ–±—ë–Ω, –ø–æ —Å—É—Å–µ–∫—É –º–µ—Ç—ë–Ω, –Ω–∞ —Å–º–µ—Ç–∞–Ω–µ –º–µ—à–∞–Ω, –≤ –ø–µ—á–∫—É —Å–∞–∂—ë–Ω, –Ω–∞ –æ–∫–æ—à–∫–µ —Å—Ç—É–∂—ë–Ω. –Ø –æ—Ç –¥–µ–¥—É—à–∫–∏ —É—à—ë–ª, —è –æ—Ç –±–∞–±—É—à–∫–∏ —É—à—ë–ª, —è –æ—Ç –∑–∞–π—Ü–∞ —É—à—ë–ª, —è –æ—Ç –≤–æ–ª–∫–∞ —É—à—ë–ª, –æ—Ç —Ç–µ–±—è, –º–µ–¥–≤–µ–¥—å, –Ω–µ —Ö–∏—Ç—Ä–æ —É–π—Ç–∏!"

–ò –ø–æ–∫–∞—Ç–∏–ª—Å—è –∫–æ–ª–æ–±–æ–∫ –¥–∞–ª—å—à–µ ‚Äî —Ç–æ–ª—å–∫–æ –º–µ–¥–≤–µ–¥—å –µ–≥–æ –∏ –≤–∏–¥–µ–ª! –ö–∞—Ç–∏—Ç—Å—è –∫–æ–ª–æ–±–æ–∫ –ø–æ –¥–æ—Ä–æ–≥–µ, –∞ –Ω–∞–≤—Å—Ç—Ä–µ—á—É –µ–º—É –ª–∏—Å–∞: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –∫–æ–ª–æ–±–æ–∫! –ö–∞–∫–æ–π —Ç—ã –ø—Ä–∏–≥–æ–∂–∏–π, –∫–∞–∫–æ–π —Ç—ã —Ä—É–º—è–Ω—ã–π!" –ö–æ–ª–æ–±–æ–∫ –æ–±—Ä–∞–¥–æ–≤–∞–ª—Å—è, —á—Ç–æ –µ–≥–æ –ø–æ—Ö–≤–∞–ª–∏–ª–∏, –∏ –∑–∞–ø–µ–ª —Å–≤–æ—é –ø–µ—Å–µ–Ω–∫—É. –ê –ª–∏—Å–∞ –∏ –≥–æ–≤–æ—Ä–∏—Ç: "–ö–∞–∫–∞—è —Å–ª–∞–≤–Ω–∞—è –ø–µ—Å–Ω—è! –¢–æ–ª—å–∫–æ —è, –∫–æ–ª–æ–±–æ–∫, —Å—Ç–∞—Ä–∞ —Å—Ç–∞–ª–∞, –ø–ª–æ—Ö–æ —Å–ª—ã—à—É. –°—è–¥—å –∫–æ –º–Ω–µ –Ω–∞ –º–æ—Ä–¥–æ—á–∫—É –¥–∞ —Å–ø–æ–π –µ—â—ë —Ä–∞–∑–æ—á–µ–∫". –ö–æ–ª–æ–±–æ–∫ –æ–±—Ä–∞–¥–æ–≤–∞–ª—Å—è, —á—Ç–æ –µ–≥–æ –ø–µ—Å–µ–Ω–∫—É –ø–æ—Ö–≤–∞–ª–∏–ª–∏, –ø—Ä—ã–≥–Ω—É–ª –ª–∏—Å–µ –Ω–∞ –º–æ—Ä–¥–æ—á–∫—É –∏ –∑–∞–ø–µ–ª. –ê –ª–∏—Å–∞ ‚Äî –∞–º! ‚Äî –∏ —Å—ä–µ–ª–∞ –∫–æ–ª–æ–±–∫–∞.`,
        categoryId: 1,
        ageGroup: "3-6",
        isPremium: false,
        readingTime: 20,
        isDeleted: false
      },
      {
        title: "–†–µ–ø–∫–∞",
        author: "–†—É—Å—Å–∫–∞—è –Ω–∞—Ä–æ–¥–Ω–∞—è —Å–∫–∞–∑–∫–∞", 
        description: "–°–∫–∞–∑–∫–∞ –æ –¥—Ä—É–∂–±–µ –∏ –≤–∑–∞–∏–º–æ–ø–æ–º–æ—â–∏",
        coverImage: "https://via.placeholder.com/200x300/FDE047/000000?text=–†–µ–ø–∫–∞",
        price: 0,
        content: `–ü–æ—Å–∞–¥–∏–ª –¥–µ–¥ —Ä–µ–ø–∫—É. –í—ã—Ä–æ—Å–ª–∞ —Ä–µ–ø–∫–∞ –±–æ–ª—å—à–∞—è-–ø—Ä–µ–±–æ–ª—å—à–∞—è. –ü–æ—à—ë–ª –¥–µ–¥ —Ä–µ–ø–∫—É —Ä–≤–∞—Ç—å: —Ç—è–Ω–µ—Ç-–ø–æ—Ç—è–Ω–µ—Ç, –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–∂–µ—Ç!

–ü–æ–∑–≤–∞–ª –¥–µ–¥ –±–∞–±–∫—É. –ë–∞–±–∫–∞ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ –∑–∞ —Ä–µ–ø–∫—É ‚Äî —Ç—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç, –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–≥—É—Ç!

–ü–æ–∑–≤–∞–ª–∞ –±–∞–±–∫–∞ –≤–Ω—É—á–∫—É. –í–Ω—É—á–∫–∞ –∑–∞ –±–∞–±–∫—É, –±–∞–±–∫–∞ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ –∑–∞ —Ä–µ–ø–∫—É ‚Äî —Ç—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç, –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–≥—É—Ç!

–ü–æ–∑–≤–∞–ª–∞ –≤–Ω—É—á–∫–∞ –ñ—É—á–∫—É. –ñ—É—á–∫–∞ –∑–∞ –≤–Ω—É—á–∫—É, –≤–Ω—É—á–∫–∞ –∑–∞ –±–∞–±–∫—É, –±–∞–±–∫–∞ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ –∑–∞ —Ä–µ–ø–∫—É ‚Äî —Ç—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç, –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–≥—É—Ç!

–ü–æ–∑–≤–∞–ª–∞ –ñ—É—á–∫–∞ –∫–æ—à–∫—É. –ö–æ—à–∫–∞ –∑–∞ –ñ—É—á–∫—É, –ñ—É—á–∫–∞ –∑–∞ –≤–Ω—É—á–∫—É, –≤–Ω—É—á–∫–∞ –∑–∞ –±–∞–±–∫—É, –±–∞–±–∫–∞ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ –∑–∞ —Ä–µ–ø–∫—É ‚Äî —Ç—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç, –≤—ã—Ç—è–Ω—É—Ç—å –Ω–µ –º–æ–≥—É—Ç!

–ü–æ–∑–≤–∞–ª–∞ –∫–æ—à–∫–∞ –º—ã—à–∫–∞. –ú—ã—à–∫–∞ –∑–∞ –∫–æ—à–∫—É, –∫–æ—à–∫–∞ –∑–∞ –ñ—É—á–∫—É, –ñ—É—á–∫–∞ –∑–∞ –≤–Ω—É—á–∫—É, –≤–Ω—É—á–∫–∞ –∑–∞ –±–∞–±–∫—É, –±–∞–±–∫–∞ –∑–∞ –¥–µ–¥–∫—É, –¥–µ–¥–∫–∞ –∑–∞ —Ä–µ–ø–∫—É ‚Äî —Ç—è–Ω—É—Ç-–ø–æ—Ç—è–Ω—É—Ç ‚Äî –≤—ã—Ç—è–Ω—É–ª–∏ —Ä–µ–ø–∫—É!`,
        categoryId: 1,
        ageGroup: "2-5",
        isPremium: false,
        readingTime: 15,
        isDeleted: false
      },
      {
        title: "–ë—É—Ä–∞—Ç–∏–Ω–æ",
        author: "–ê–ª–µ–∫—Å–µ–π –¢–æ–ª—Å—Ç–æ–π",
        description: "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è –¥–µ—Ä–µ–≤—è–Ω–Ω–æ–≥–æ –º–∞–ª—å—á–∏–∫–∞",
        coverImage: "https://via.placeholder.com/200x300/1E3A8A/ffffff?text=–ë—É—Ä–∞—Ç–∏–Ω–æ",
        price: 19900, // 199 —Ä—É–±–ª–µ–π
        content: `–í –æ–¥–Ω–æ–º –≥–æ—Ä–æ–¥–µ –∂–∏–ª —Å—Ç–∞—Ä—ã–π —à–∞—Ä–º–∞–Ω—â–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –ö–∞—Ä–ª–æ. –¶–µ–ª—ã–π –¥–µ–Ω—å –æ–Ω –∏–≥—Ä–∞–ª –Ω–∞ —à–∞—Ä–º–∞–Ω–∫–µ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–ª —Å–µ–±–µ –Ω–∞ —Ö–ª–µ–±. –ñ–∏–ª –æ–Ω –≤ –∫–∞–º–æ—Ä–∫–µ –ø–æ–¥ –ª–µ—Å—Ç–Ω–∏—Ü–µ–π.

–û–¥–Ω–∞–∂–¥—ã, —Å–∏–¥—è –ø–µ—Ä–µ–¥ –æ—á–∞–≥–æ–º –∏ —Ä–∞–∑–º—ã—à–ª—è—è –æ —Å–≤–æ–µ–π –±–µ–¥–Ω–æ—Å—Ç–∏, —Å—Ç–∞—Ä—ã–π –ö–∞—Ä–ª–æ —É—Å–ª—ã—à–∞–ª —Ç–æ–Ω–µ–Ω—å–∫–∏–π –≥–æ–ª–æ—Å–æ–∫: "–û–π, –æ–π, –æ–π! –û—Ç–ø—É—Å—Ç–∏ –º–µ–Ω—è!" –ö–∞—Ä–ª–æ —É–¥–∏–≤–∏–ª—Å—è: "–ö—Ç–æ —ç—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç?" –û—Å–º–æ—Ç—Ä–µ–ª –∫–∞–º–æ—Ä–∫—É ‚Äî –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç.

–í–¥—Ä—É–≥ –ø–æ–ª–µ–Ω–æ, –∫–æ—Ç–æ—Ä–æ–µ –ª–µ–∂–∞–ª–æ —É –æ—á–∞–≥–∞, —Å–∞–º–æ —Å–æ–±–æ–π –∑–∞—à–µ–≤–µ–ª–∏–ª–æ—Å—å. "–≠—Ç–æ –æ—á–µ–Ω—å —Å—Ç—Ä–∞–Ω–Ω–æ, ‚Äî –ø–æ–¥—É–º–∞–ª –ö–∞—Ä–ª–æ. ‚Äî –ù–æ –∏–∑ —ç—Ç–æ–≥–æ –ø–æ–ª–µ–Ω–∞ –º–æ–∂–Ω–æ –≤—ã—Ä–µ–∑–∞—Ç—å –∫—É–∫–ª—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å –Ω–µ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è. –¢–æ–≥–¥–∞ —è –∑–∞—Ä–∞–±–æ—Ç–∞—é –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥."

–í–∑—è–ª –ö–∞—Ä–ª–æ –Ω–æ–∂ –∏ –Ω–∞—á–∞–ª —Å—Ç—Ä–æ–≥–∞—Ç—å –ø–æ–ª–µ–Ω–æ. –¢–æ–ª—å–∫–æ —Å—Ä–µ–∑–∞–ª –ø–µ—Ä–≤—É—é —Å—Ç—Ä—É–∂–∫—É ‚Äî –ø–æ–ª–µ–Ω–æ –∑–∞–∫—Ä–∏—á–∞–ª–æ: "–û–π, –∫–∞–∫ –±–æ–ª—å–Ω–æ!" –ù–æ –ö–∞—Ä–ª–æ –Ω–µ –∏—Å–ø—É–≥–∞–ª—Å—è –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–ª –º–∞—Å—Ç–µ—Ä–∏—Ç—å. –í—Å–∫–æ—Ä–µ —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–µ—Ä–µ–≤—è–Ω–Ω–∞—è –∫—É–∫–ª–∞ ‚Äî –º–∞–ª—å—á–∏–∫ —Å –¥–ª–∏–Ω–Ω—ã–º –Ω–æ—Å–æ–º.

"–ö–∞–∫ –Ω–∞–∑–≤–∞—Ç—å —Ç–µ–±—è?" ‚Äî —Ä–∞–∑–º—ã—à–ª—è–ª –ö–∞—Ä–ª–æ. –ò —Ç—É—Ç –∂–µ –≤—Å–ø–æ–º–Ω–∏–ª: "–ù–∞–∑–æ–≤—É-–∫–∞ —è —Ç–µ–±—è –ë—É—Ä–∞—Ç–∏–Ω–æ! –≠—Ç–æ –∏–º—è –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ —Å—á–∞—Å—Ç—å–µ."

–ï–¥–≤–∞ –ö–∞—Ä–ª–æ –ø—Ä–æ–∏–∑–Ω—ë—Å —ç—Ç–æ –∏–º—è, –∫—É–∫–ª–∞ –æ–∂–∏–ª–∞. –ë—É—Ä–∞—Ç–∏–Ω–æ –≤—Å–∫–æ—á–∏–ª –Ω–∞ –Ω–æ–≥–∏, —Å—Ö–≤–∞—Ç–∏–ª –º–æ–ª–æ—Ç–æ–∫ –∏ –ø—Ä–∏–Ω—è–ª—Å—è –∫–æ–ª–æ—Ç–∏—Ç—å –ø–æ –Ω–∞–∫–æ–≤–∞–ª—å–Ω–µ: —Ç—É–∫-—Ç—É–∫-—Ç—É–∫!

"–ü–∞–ø–∞ –ö–∞—Ä–ª–æ, —è –µ—Å—Ç—å —Ö–æ—á—É!" ‚Äî –∑–∞–∫—Ä–∏—á–∞–ª –ë—É—Ä–∞—Ç–∏–Ω–æ. –ö–∞—Ä–ª–æ –¥–∞–ª –µ–º—É –∫–æ—Ä–æ—á–∫—É —Ö–ª–µ–±–∞. –ë—É—Ä–∞—Ç–∏–Ω–æ —Å—ä–µ–ª –µ—ë –≤ –æ–¥–∏–Ω –º–∏–≥ –∏ —Å–∫–∞–∑–∞–ª: "–¢–µ–ø–µ—Ä—å —è —Ö–æ—á—É –≤ —à–∫–æ–ª—É! –•–æ—á—É —Å—Ç–∞—Ç—å —É–º–Ω—ã–º –∏ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–º!"

–≠—Ç–∏ —Å–ª–æ–≤–∞ —Ç–∞–∫ –æ–±—Ä–∞–¥–æ–≤–∞–ª–∏ –ø–∞–ø—É –ö–∞—Ä–ª–æ, —á—Ç–æ –æ–Ω —Ä–µ—à–∏–ª –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ—é –∫—É—Ä—Ç–∫—É –∏ –∫—É–ø–∏—Ç—å –¥–ª—è –ë—É—Ä–∞—Ç–∏–Ω–æ –∞–∑–±—É–∫—É. –ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ë—É—Ä–∞—Ç–∏–Ω–æ —Å –∞–∑–±—É–∫–æ–π –ø–æ–¥ –º—ã—à–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –≤ —à–∫–æ–ª—É. –ù–æ –ø–æ –¥–æ—Ä–æ–≥–µ –µ–≥–æ –∂–¥–∞–ª–∏ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è...`,
        categoryId: 2,
        ageGroup: "6-10",
        isPremium: true,
        readingTime: 45,
        isDeleted: false
      }
    ];

    defaultBooks.forEach(book => this.createBook(book));

    // Initialize audio books - —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    const defaultAudioBooks: InsertAudioBook[] = [
      {
        title: "–ê–≤—Ç–æ–º–æ–±–∏–ª—å",
        author: "–ù–æ—Å–æ–≤ –ù.–ù.",
        description: "–î–µ—Ç—Å–∫–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ –æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è—Ö —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º",
        coverImage: "/avtomobil-cover.webp",
        audioUrl: "/avtomobil-audio.mp3",
        duration: 293, // 4:53 –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        categoryId: 1,
        ageGroup: "3-8",
        isPremium: true,
        price: 24999, // 249.99‚ÇΩ –≤ –∫–æ–ø–µ–π–∫–∞—Ö
        narrator: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–∫—Ç–æ—Ä",
        isDeleted: false
      }
    ];

    defaultAudioBooks.forEach(audioBook => this.createAudioBook(audioBook));

    // Initialize shop products
    const defaultShopProducts: InsertShopProduct[] = [
      {
        name: "–§—É—Ç–±–æ–ª–∫–∞ RIZY LAND –¥–µ—Ç—Å–∫–∞—è",
        description: "–ú—è–≥–∫–∞—è —Ö–ª–æ–ø–∫–æ–≤–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º RIZY LAND –¥–ª—è —é–Ω—ã—Ö —á–∏—Ç–∞—Ç–µ–ª–µ–π",
        price: 129900,
        category: "–û–¥–µ–∂–¥–∞",
        imageUrl: "",
        stock: 50,
        isActive: true
      },
      {
        name: "–•—É–¥–∏ RIZY LAND —Å –∫–∞–ø—é—à–æ–Ω–æ–º",
        description: "–£—é—Ç–Ω–æ–µ —Ö—É–¥–∏ –¥–ª—è –¥–µ—Ç–µ–π —Å —è—Ä–∫–∏–º–∏ –ø—Ä–∏–Ω—Ç–∞–º–∏ –∏–∑ –ª—é–±–∏–º—ã—Ö –∫–Ω–∏–≥",
        price: 249900,
        category: "–û–¥–µ–∂–¥–∞",
        imageUrl: "",
        stock: 30,
        isActive: true
      },
      {
        name: "–ó–∞–∫–ª–∞–¥–∫–∞ –º–∞–≥–Ω–∏—Ç–Ω–∞—è \"–ö–æ–ª–æ–±–æ–∫\"",
        description: "–ö—Ä–∞—Å–æ—á–Ω–∞—è –º–∞–≥–Ω–∏—Ç–Ω–∞—è –∑–∞–∫–ª–∞–¥–∫–∞ —Å –≥–µ—Ä–æ—è–º–∏ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ–π —Å–∫–∞–∑–∫–∏",
        price: 19900,
        category: "–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è",
        imageUrl: "",
        stock: 100,
        isActive: true
      },
      {
        name: "–ë–ª–æ–∫–Ω–æ—Ç \"–ú–æ–∏ –∏—Å—Ç–æ—Ä–∏–∏\" A5",
        description: "–ö—Ä–∞—Å–∏–≤—ã–π –±–ª–æ–∫–Ω–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–µ–π –∏ —Ä–∏—Å—É–Ω–∫–æ–≤ —Å –º–æ—Ç–∏–≤–∞–º–∏ –∏–∑ –¥–µ—Ç—Å–∫–∏—Ö –∫–Ω–∏–≥",
        price: 79900,
        category: "–ö–∞–Ω—Ü–µ–ª—è—Ä–∏—è",
        imageUrl: "",
        stock: 75,
        isActive: true
      },
      {
        name: "–ö—Ä—É–∂–∫–∞ \"–ì–µ—Ä–æ–∏ —Å–∫–∞–∑–æ–∫\"",
        description: "–Ø—Ä–∫–∞—è –¥–µ—Ç—Å–∫–∞—è –∫—Ä—É–∂–∫–∞ —Å –ª—é–±–∏–º—ã–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ –∏–∑ –∫–Ω–∏–≥ RIZY LAND",
        price: 69900,
        category: "–ü–æ–¥–∞—Ä–∫–∏",
        imageUrl: "",
        stock: 40,
        isActive: true
      },
      {
        name: "–†—é–∫–∑–∞–∫ –¥–µ—Ç—Å–∫–∏–π \"–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è\"",
        description: "–£–¥–æ–±–Ω—ã–π —Ä—é–∫–∑–∞–∫ –¥–ª—è —à–∫–æ–ª—ã –∏ –ø—Ä–æ–≥—É–ª–æ–∫ —Å —è—Ä–∫–∏–º–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏",
        price: 189900,
        category: "–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã",
        imageUrl: "",
        stock: 25,
        isActive: true
      }
    ];

    defaultShopProducts.forEach(product => this.createShopProduct(product));
  }

  async getUser(id: number): Promise<User | undefined> {
    return this.users.get(id);
  }

  async getUserByUsername(username: string): Promise<User | undefined> {
    return Array.from(this.users.values()).find(user => user.username === username);
  }

  async createUser(insertUser: InsertUser): Promise<User> {
    const id = this.currentUserId++;
    const user: User = { ...insertUser, id };
    this.users.set(id, user);
    return user;
  }

  async getCategories(): Promise<Category[]> {
    return Array.from(this.categories.values());
  }

  async getCategory(id: number): Promise<Category | undefined> {
    return this.categories.get(id);
  }

  async createCategory(insertCategory: InsertCategory): Promise<Category> {
    const id = this.currentCategoryId++;
    const category: Category = { 
      id,
      name: insertCategory.name,
      description: insertCategory.description || null,
      icon: insertCategory.icon
    };
    this.categories.set(id, category);
    return category;
  }

  async getBooks(categoryId?: number, isPremium?: boolean): Promise<Book[]> {
    let books = Array.from(this.books.values()).filter(book => !book.isDeleted);
    
    if (categoryId !== undefined) {
      books = books.filter(book => book.categoryId === categoryId);
    }
    
    if (isPremium !== undefined) {
      books = books.filter(book => book.isPremium === isPremium);
    }
    
    return books;
  }

  async getBook(id: number): Promise<Book | undefined> {
    return this.books.get(id);
  }

  async createBook(insertBook: InsertBook): Promise<Book> {
    const id = this.currentBookId++;
    const book: Book = { 
      id,
      title: insertBook.title,
      author: insertBook.author,
      description: insertBook.description || null,
      coverImage: insertBook.coverImage || null,
      content: insertBook.content,
      categoryId: insertBook.categoryId || null,
      ageGroup: insertBook.ageGroup,
      isPremium: insertBook.isPremium || null,
      price: insertBook.price || null,
      readingTime: insertBook.readingTime || null,
      isDeleted: insertBook.isDeleted || null,
      createdAt: new Date()
    };
    this.books.set(id, book);
    return book;
  }

  async updateBook(id: number, updateData: Partial<InsertBook>): Promise<Book | undefined> {
    const existingBook = this.books.get(id);
    if (!existingBook) {
      return undefined;
    }
    const updatedBook: Book = { ...existingBook, ...updateData };
    this.books.set(id, updatedBook);
    return updatedBook;
  }

  async deleteBook(id: number): Promise<boolean> {
    const book = this.books.get(id);
    if (book) {
      book.isDeleted = true;
      this.books.set(id, book);
      return true;
    }
    return false;
  }

  async getDeletedBooks(): Promise<Book[]> {
    return Array.from(this.books.values()).filter(book => book.isDeleted);
  }

  async restoreBook(id: number): Promise<boolean> {
    const book = this.books.get(id);
    if (book && book.isDeleted) {
      book.isDeleted = false;
      this.books.set(id, book);
      return true;
    }
    return false;
  }

  async searchBooks(query: string): Promise<Book[]> {
    const books = Array.from(this.books.values());
    const lowerQuery = query.toLowerCase();
    return books.filter(book => 
      book.title.toLowerCase().includes(lowerQuery) ||
      book.author.toLowerCase().includes(lowerQuery) ||
      book.description?.toLowerCase().includes(lowerQuery)
    );
  }

  async getAudioBooks(categoryId?: number, isPremium?: boolean): Promise<AudioBook[]> {
    let audioBooks = Array.from(this.audioBooks.values());
    
    if (categoryId !== undefined) {
      audioBooks = audioBooks.filter(audioBook => audioBook.categoryId === categoryId);
    }
    
    if (isPremium !== undefined) {
      audioBooks = audioBooks.filter(audioBook => audioBook.isPremium === isPremium);
    }
    
    return audioBooks;
  }

  async getAudioBook(id: number): Promise<AudioBook | undefined> {
    return this.audioBooks.get(id);
  }

  async createAudioBook(insertAudioBook: InsertAudioBook): Promise<AudioBook> {
    const id = this.currentAudioBookId++;
    const audioBook: AudioBook = { 
      ...insertAudioBook, 
      id,
      createdAt: new Date()
    };
    this.audioBooks.set(id, audioBook);
    return audioBook;
  }

  async updateAudioBook(id: number, updateData: Partial<InsertAudioBook>): Promise<AudioBook | undefined> {
    const existingAudioBook = this.audioBooks.get(id);
    if (!existingAudioBook) {
      return undefined;
    }
    const updatedAudioBook: AudioBook = { ...existingAudioBook, ...updateData };
    this.audioBooks.set(id, updatedAudioBook);
    return updatedAudioBook;
  }

  async deleteAudioBook(id: number): Promise<boolean> {
    return this.audioBooks.delete(id);
  }

  async searchAudioBooks(query: string): Promise<AudioBook[]> {
    const audioBooks = Array.from(this.audioBooks.values());
    const lowerQuery = query.toLowerCase();
    return audioBooks.filter(audioBook => 
      audioBook.title.toLowerCase().includes(lowerQuery) ||
      audioBook.author.toLowerCase().includes(lowerQuery) ||
      audioBook.description?.toLowerCase().includes(lowerQuery)
    );
  }

  async getUserLibrary(userId: number): Promise<UserLibrary[]> {
    return Array.from(this.userLibrary.values()).filter(item => item.userId === userId);
  }

  async addToLibrary(insertLibrary: InsertUserLibrary): Promise<UserLibrary> {
    const id = this.currentLibraryId++;
    const library: UserLibrary = { 
      ...insertLibrary, 
      id,
      addedAt: new Date()
    };
    this.userLibrary.set(id, library);
    return library;
  }

  async updateProgress(userId: number, bookId?: number, audioBookId?: number, progress: number): Promise<void> {
    const items = Array.from(this.userLibrary.values());
    const item = items.find(lib => 
      lib.userId === userId && 
      (bookId ? lib.bookId === bookId : lib.audioBookId === audioBookId)
    );
    
    if (item) {
      item.progress = progress;
      this.userLibrary.set(item.id, item);
    }
  }

  async getUserPurchases(userId: number): Promise<Purchase[]> {
    return Array.from(this.purchases.values()).filter(purchase => purchase.userId === userId);
  }

  async createPurchase(insertPurchase: InsertPurchase): Promise<Purchase> {
    const id = this.currentPurchaseId++;
    const purchase: Purchase = { 
      ...insertPurchase, 
      id,
      purchasedAt: new Date()
    };
    this.purchases.set(id, purchase);
    return purchase;
  }

  async hasPurchased(userId: number, bookId?: number, audioBookId?: number): Promise<boolean> {
    const purchases = Array.from(this.purchases.values());
    return purchases.some(purchase => 
      purchase.userId === userId && 
      (bookId ? purchase.bookId === bookId : purchase.audioBookId === audioBookId)
    );
  }

  // Shop Products methods
  async getShopProducts(): Promise<ShopProduct[]> {
    return Array.from(this.shopProducts.values()).filter(product => product.isActive);
  }

  async getShopProduct(id: number): Promise<ShopProduct | undefined> {
    return this.shopProducts.get(id);
  }

  async createShopProduct(insertProduct: InsertShopProduct): Promise<ShopProduct> {
    const id = this.currentShopProductId++;
    const product: ShopProduct = {
      ...insertProduct,
      id,
      createdAt: new Date()
    };
    this.shopProducts.set(id, product);
    return product;
  }

  async updateShopProduct(id: number, updateData: Partial<InsertShopProduct>): Promise<ShopProduct | undefined> {
    const existingProduct = this.shopProducts.get(id);
    if (!existingProduct) return undefined;

    const updatedProduct: ShopProduct = { ...existingProduct, ...updateData };
    this.shopProducts.set(id, updatedProduct);
    return updatedProduct;
  }

  async deleteShopProduct(id: number): Promise<boolean> {
    const product = this.shopProducts.get(id);
    if (!product) return false;

    // Soft delete - mark as inactive
    product.isActive = false;
    this.shopProducts.set(id, product);
    return true;
  }
}

export const storage = new MemStorage();
